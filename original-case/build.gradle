buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 11
targetCompatibility = 11

build {
    version = '0.2.0'
}

//Gather metrics for this API
ext {
	set('springBootAdminVersion', "2.4.3")
}

task deleteStaticFolder(type: Delete) {
    def dirName = "src/main/resources/static" 
    file( dirName ).list().each{
        f -> 
            delete "${dirName}/${f}"
    }
}

processResources.dependsOn('frontend:build')

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'de.codecentric:spring-boot-admin-starter-client'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.8.1'
    testImplementation 'com.squareup.okhttp3:okhttp:4.8.1'
	
	testAnnotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'  
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly('org.projectlombok:lombok')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
	}
}

test {
	useJUnitPlatform()
}
